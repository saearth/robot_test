<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1 (Python 3.12.4 on win32)" generated="2024-10-01T15:00:39.560801" rpa="false" schemaversion="5">
<suite id="s1" name="Req api advance" source="D:\project\robot framework\Test_Robot\Req_api_advance.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2024-10-01T15:00:40.415485" level="INFO">Creating Session using : alias=jsonplaceholder, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>jsonplaceholder</arg>
<arg>https://jsonplaceholder.typicode.com</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-10-01T15:00:40.415485" elapsed="0.001047"/>
</kw>
<test id="s1-t1" name="Get Request Test" line="9">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-10-01T15:00:40.419809" level="INFO">Creating Session using : alias=google, url=http://www.google.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>http://www.google.com</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-10-01T15:00:40.419809" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-10-01T15:00:40.839804" level="INFO">GET Request : url=http://www.google.com/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-10-01T15:00:40.839804" level="INFO">GET Response : url=http://www.google.com/ 
 status=200, reason=OK 
 headers={'Date': 'Tue, 01 Oct 2024 08:00:35 GMT', 'Expires': '-1', 'Cache-Control': 'private, max-age=0', 'Content-Type': 'text/html; charset=ISO-8859-1', 'Content-Security-Policy-Report-Only': "object-src 'none';base-uri 'self';script-src 'nonce-f8FoP6BQHNuwoUlcX-XmjQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp", 'P3P': 'CP="This is not a P3P policy! See g.co/p3phelp for more info."', 'Content-Encoding': 'gzip', 'Server': 'gws', 'Content-Length': '9795', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Set-Cookie': 'AEC=AVYB7crCKTzsAJEqfnYUh1rFbIR_FO-w2SPZjE8dHVdT8ZeKFRohFEkya9U; expires=Sun, 30-Mar-2025 08:00:35 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax, NID=518=XAdWly5HwfJiUOm2uJa96jk1jivzzhMMJCNvg4UcYIkhuSncFajU6F2PO8150Y785PDvQRwdl8OkXFvtSkt4fouQ5-mzALx4jFCafPeI2CRe6GPa3WluNQzJPVatr71CNPbbm_PIehXW37tThiBa6SPbI_-qF06MzfSACGvHbPuwZnx5vhd4YRBhQ0gR6LwmMAM; expires=Wed, 02-Apr-2025 08:00:35 GMT; path=/; domain=.google.com; HttpOnly'} 
 body=&lt;!doctype html&gt;&lt;html itemscope="" itemtype="http://schema.org/WebPage" lang="th"&gt;&lt;head&gt;&lt;meta content="text/html; charset=UTF-8" http-equiv="Content-Type"&gt;&lt;meta content="/images/branding/googleg/1x/googleg_standard_color_128dp.png" itemprop="image"&gt;&lt;title&gt;Google&lt;/title&gt;&lt;script nonce="f8FoP6BQHNuwoUlcX-XmjQ"&gt;(function(){var _g={kEI:'I6z7ZpOzDdah0PEPq47o0Ak',kEXPI:'0,2504567,1195716,666,432,3,538661,2872,2891,43028,46127,203622,6700,124313,2006,8155,8861,14490,22435,9779,62658,76208,15816,1804,34993,276,11813,1635,29276,5230293,9465,999,148,5991284,2840361,741,880,1,3,1,65,29,5,37,26674370,1305642,14298,2374,43887,3,1603,3,2124363,23029351,7950,1,4848,19163,37414,43904,11737,10886,15164,4786,2,3393,49430,14125,7543,6756,155,2484,13504,7735,9140,4599,328,3217,4,1238,1766,6760,3657,2475,3842,3,3864,4858,5,2526,5633,687,7291,505,3,2834,181,5452,3633,3102,4,6850,682,283,381,13648,54,49,2164,2,9,5214,8197,2378,1482,981,524,4,3481,3282,5676,4828,4546,719,2475,797,3034,2750,2899,2,2641,1325,3634,9,576,1766,5346,3560,1838,2153,437,3,1549,644,2895,1499,1512,256,597,1801,300,1014,535,326,1155,2,1015,4794,248,2568,391,689,4,3,628,823,41,1913,6,3,1028,163,235,1236,956,81,411,1787,211,245,240,219,3147,1160,200,529,74,440,2,1108,16,185,194,341,131,640,811,139,703,46,347,186,191,598,126,551,50,210,887,1,31,2709,157,147,318,146,947,40,445,1,3,371,42,474,247,693,16,164,105,1046,2,430,4,1,6,121,567,803,151,161,738,702,1993,92,37,115,118,1029,573,60,907,150,400,411,744,183,32,2202,511,3,9,183,23,519,198,486,175,208,78,1144,1,8,1,1,4,1,4,703,560,683,584,2,451,211,855,84,42,291,59,251,39,602,351,3,545,283,216,203,4,591,74,3,7,58,3,74,143,350,445,2,702,1271,457,2595,21076450,364212,3,1423,3,14475,3,14898,2095,21,219,2562,482,160,60,877,353',kBL:'1wRn',kOPI:89978449};(function(){var a;((a=window.google)==null?0:a.stvsc)?google.kEI=_g.kEI:window.google=_g;}).call(this);})();(function(){google.sn='webhp';google.kHL='th';})();(function(){
var h=this||self;function l(){return window.google!==void 0&amp;&amp;window.google.kOPI!==void 0&amp;&amp;window.google.kOPI!==0?window.google.kOPI:null};var m,n=[];function p(a){for(var b;a&amp;&amp;(!a.getAttribute||!(b=a.getAttribute("eid")));)a=a.parentNode;return b||m}function q(a){for(var b=null;a&amp;&amp;(!a.getAttribute||!(b=a.getAttribute("leid")));)a=a.parentNode;return b}function r(a){/^http:/i.test(a)&amp;&amp;window.location.protocol==="https:"&amp;&amp;(google.ml&amp;&amp;google.ml(Error("a"),!1,{src:a,glmm:1}),a="");return a}
function t(a,b,c,d,k){var e="";b.search("&amp;ei=")===-1&amp;&amp;(e="&amp;ei="+p(d),b.search("&amp;lei=")===-1&amp;&amp;(d=q(d))&amp;&amp;(e+="&amp;lei="+d));d="";var g=b.search("&amp;cshid=")===-1&amp;&amp;a!=="slh",f=[];f.push(["zx",Date.now().toString()]);h._cshid&amp;&amp;g&amp;&amp;f.push(["cshid",h._cshid]);c=c();c!=null&amp;&amp;f.push(["opi",c.toString()]);for(c=0;c&lt;f.length;c++){if(c===0||c&gt;0)d+="&amp;";d+=f[c][0]+"="+f[c][1]}return"/"+(k||"gen_204")+"?atyp=i&amp;ct="+String(a)+"&amp;cad="+(b+e+d)};m=google.kEI;google.getEI=p;google.getLEI=q;google.ml=function(){return null};google.log=function(a,b,c,d,k,e){e=e===void 0?l:e;c||(c=t(a,b,e,d,k));if(c=r(c)){a=new Image;var g=n.length;n[g]=a;a.onerror=a.onload=a.onabort=function(){delete n[g]};a.src=c}};google.logUrl=function(a,b){b=b===void 0?l:b;return t("",a,b)};}).call(this);(function(){google.y={};google.sy=[];var d;(d=google).x||(d.x=function(a,b){if(a)var c=a.id;else{do c=Math.random();while(google.y[c])}google.y[c]=[a,b];return!1});var e;(e=google).sx||(e.sx=function(a){google.sy.push(a)});google.lm=[];var f;(f=google).plm||(f.plm=function(a){google.lm.push.apply(google.lm,a)});google.lq=[];var g;(g=google).load||(g.load=function(a,b,c){google.lq.push([[a],b,c])});var h;(h=google).loadAll||(h.loadAll=function(a,b){google.lq.push([a,b])});google.bx=!1;var k;(k=google).lx||(k.lx=function(){});var l=[],m;(m=google).fce||(m.fce=function(a,b,c,n){l.push([a,b,c,n])});google.qce=l;}).call(this);google.f={};(function(){
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.target){var c=a.getAttribute("data-submitfalse");a=c==="1"||c==="q"&amp;&amp;!a.elements.q.value?!0:!1}else a=!1;a&amp;&amp;(b.preventDefault(),b.stopPropagation())},!0);document.documentElement.addEventListener("click",function(b){var a;a:{for(a=b.target;a&amp;&amp;a!==document.documentElement;a=a.parentElement)if(a.tagName==="A"){a=a.getAttribute("data-nohref")==="1";break a}a=!1}a&amp;&amp;b.preventDefault()},!0);}).call(this);&lt;/script&gt;&lt;style&gt;#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}
&lt;/style&gt;&lt;style&gt;body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#1967d2}em{color:#c5221f;font-style:normal;font-weight:normal}a em{text-decoration:underline}.lst{height:25px;width:496px}.gsfi,.lst{font:18px arial,sans-serif}.gsfs{font:17px arial,sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}body{background:#fff;color:#000}a{color:#681da8;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#1967d2}a:visited{color:#681da8}.sblc{padding-top:5px}.sblc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#f8f9fa;border:solid 1px;border-color:#dadce0 #70757a #70757a #dadce0;height:30px}.lsbb{display:block}#WqQANb a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;color:#000;border:none;cursor:pointer;height:30px;margin:0;outline:0;font:15px arial,sans-serif;vertical-align:top}.lsb:active{background:#dadce0}.lst:focus{outline:none}.Ucigb{width:458px}&lt;/style&gt;&lt;script nonce="f8FoP6BQHNuwoUlcX-XmjQ"&gt;(function(){window.google.erd={jsr:1,bv:2088,de:true,dpf:'roCQrDYbC1_bwyMQgEgZOCLaUMke5rUTC0RDf-7n2q8'};
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t=google.erd,v=t.jsr;google.ml=function(a,b,d,m,e){e=e===void 0?2:e;b&amp;&amp;(r=a&amp;&amp;a.message);d===void 0&amp;&amp;(d={});d.cad="ple_"+google.ple+".aple_"+google.aple;if(google.dl)return google.dl(a,e,d,!0),null;b=d;if(v&lt;0){window.console&amp;&amp;console.error(a,b);if(v===-2)throw a;b=!1}else b=!a||!a.message||a.message==="Error loading script"||q&gt;=l&amp;&amp;!m?!1:!0;if(!b)return null;q++;d=d||{};b=encodeURIComponent;var c="/gen_204?atyp=i&amp;ei="+b(google.kEI);google.kEXPI&amp;&amp;(c+="&amp;jexpid="+b(google.kEXPI));c+="&amp;srcpg="+b(google.sn)+"&amp;jsr="+b(t.jsr)+
"&amp;bver="+b(t.bv);t.dpf&amp;&amp;(c+="&amp;dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&amp;&amp;(c+="&amp;line="+f);var h=a.fileName;h&amp;&amp;(h.indexOf("-extension:/")&gt;0&amp;&amp;(e=3),c+="&amp;script="+b(h),f&amp;&amp;h===window.location.href&amp;&amp;(f=document.documentElement.outerHTML.split("\n")[f],c+="&amp;cad="+b(f?f.substring(0,300):"No script found.")));google.ple&amp;&amp;google.ple===1&amp;&amp;(e=2);c+="&amp;jsel="+e;for(var u in d)c+="&amp;",c+=b(u),c+="=",c+=b(d[u]);c=c+"&amp;emsg="+b(a.name+": "+a.message);c=c+"&amp;jsst="+b(a.stack||"N/A");c.length&gt;=12288&amp;&amp;(c=c.substr(0,12288));a=c;m||google.log(0,"",a);return a};window.onerror=function(a,b,d,m,e){r!==a&amp;&amp;(a=e instanceof Error?e:Error(a),d===void 0||"lineNumber"in a||(a.lineNumber=d),b===void 0||"fileName"in a||(a.fileName=b),google.ml(a,!1,void 0,!1,a.name==="SyntaxError"||a.message.substring(0,11)==="SyntaxError"||a.message.indexOf("Script error")!==-1?3:0));r=null;p&amp;&amp;q&gt;=l&amp;&amp;(window.onerror=null)};})();&lt;/script&gt;&lt;/head&gt;&lt;body bgcolor="#fff"&gt;&lt;script nonce="f8FoP6BQHNuwoUlcX-XmjQ"&gt;(function(){var src='/images/nav_logo229.png';var iesg=false;document.body.onload = function(){window.n &amp;&amp; window.n();if (document.images){new Image().src=src;}
if (!iesg){document.f&amp;&amp;document.f.q.focus();document.gbqf&amp;&amp;document.gbqf.q.focus();}
}
})();&lt;/script&gt;&lt;div id="mngb"&gt;&lt;div id=gbar&gt;&lt;nobr&gt;&lt;b class=gb1&gt;&amp;#3588;&amp;#3657;&amp;#3609;&amp;#3627;&amp;#3634;&lt;/b&gt; &lt;a class=gb1 href="https://www.google.com/imghp?hl=th&amp;tab=wi"&gt;&amp;#3588;&amp;#3657;&amp;#3609;&amp;#3619;&amp;#3641;&amp;#3611;&lt;/a&gt; &lt;a class=gb1 href="http://maps.google.co.th/maps?hl=th&amp;tab=wl"&gt;Maps&lt;/a&gt; &lt;a class=gb1 href="https://play.google.com/?hl=th&amp;tab=w8"&gt;Play&lt;/a&gt; &lt;a class=gb1 href="https://www.youtube.com/?tab=w1"&gt;YouTube&lt;/a&gt; &lt;a class=gb1 href="https://news.google.com/?tab=wn"&gt;&amp;#3586;&amp;#3656;&amp;#3634;&amp;#3623;&lt;/a&gt; &lt;a class=gb1 href="https://mail.google.com/mail/?tab=wm"&gt;Gmail&lt;/a&gt; &lt;a class=gb1 href="https://drive.google.com/?tab=wo"&gt;&amp;#3652;&amp;#3604;&amp;#3619;&amp;#3615;&amp;#3660;&lt;/a&gt; &lt;a class=gb1 style="text-decoration:none" href="https://www.google.co.th/intl/th/about/products?tab=wh"&gt;&lt;u&gt;&amp;#3629;&amp;#3639;&amp;#3656;&amp;#3609;&amp;#3654;&lt;/u&gt; &amp;raquo;&lt;/a&gt;&lt;/nobr&gt;&lt;/div&gt;&lt;div id=guser width=100%&gt;&lt;nobr&gt;&lt;span id=gbn class=gbi&gt;&lt;/span&gt;&lt;span id=gbf class=gbf&gt;&lt;/span&gt;&lt;span id=gbe&gt;&lt;/span&gt;&lt;a href="http://www.google.co.th/history/optout?hl=th" class=gb4&gt;&amp;#3611;&amp;#3619;&amp;#3632;&amp;#3623;&amp;#3633;&amp;#3605;&amp;#3636;&amp;#3648;&amp;#3623;&amp;#3655;&amp;#3610;&lt;/a&gt; | &lt;a  href="/preferences?hl=th" class=gb4&gt;&amp;#3585;&amp;#3634;&amp;#3619;&amp;#3605;&amp;#3633;&amp;#3657;&amp;#3591;&amp;#3588;&amp;#3656;&amp;#3634;&lt;/a&gt; | &lt;a target=_top id=gb_70 href="https://accounts.google.com/ServiceLogin?hl=th&amp;passive=true&amp;continue=http://www.google.com/&amp;ec=GAZAAQ" class=gb4&gt;&amp;#3648;&amp;#3586;&amp;#3657;&amp;#3634;&amp;#3626;&amp;#3641;&amp;#3656;&amp;#3619;&amp;#3632;&amp;#3610;&amp;#3610;&lt;/a&gt;&lt;/nobr&gt;&lt;/div&gt;&lt;div class=gbh style=left:0&gt;&lt;/div&gt;&lt;div class=gbh style=right:0&gt;&lt;/div&gt;&lt;/div&gt;&lt;center&gt;&lt;br clear="all" id="lgpd"&gt;&lt;div id="XjhHGf"&gt;&lt;img alt="Google" height="92" src="/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png" style="padding:28px 0 14px" width="272" id="hplogo"&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;form action="/search" name="f"&gt;&lt;table cellpadding="0" cellspacing="0"&gt;&lt;tr valign="top"&gt;&lt;td width="25%"&gt;&amp;nbsp;&lt;/td&gt;&lt;td align="center" nowrap=""&gt;&lt;input name="ie" value="ISO-8859-1" type="hidden"&gt;&lt;input value="th" name="hl" type="hidden"&gt;&lt;input name="source" type="hidden" value="hp"&gt;&lt;input name="biw" type="hidden"&gt;&lt;input n... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2024-10-01T15:00:40.841796" level="INFO">${resp_google} = &lt;Response [200]&gt;</msg>
<var>${resp_google}</var>
<arg>google</arg>
<arg>/</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-10-01T15:00:40.420811" elapsed="0.420985"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-10-01T15:00:41.224959" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-10-01T15:00:41.225969" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Tue, 01 Oct 2024 08:00:35 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1712075078&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=JzRo0LlK25cqvVyw4TVYQtAs%2BYz3liEchu4ktlmhIaM%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1712075078&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=JzRo0LlK25cqvVyw4TVYQtAs%2BYz3liEchu4ktlmhIaM%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1712075115', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26284', 'Server': 'cloudflare', 'CF-RAY': '8cbaeb7faa63a3da-SIN', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg time="2024-10-01T15:00:41.225969" level="INFO">C:\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-10-01T15:00:41.225969" level="INFO">${resp_json} = &lt;Response [200]&gt;</msg>
<var>${resp_json}</var>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-10-01T15:00:40.859748" elapsed="0.366221"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${resp_google.reason}</arg>
<arg>OK</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-10-01T15:00:41.225969" elapsed="0.000997"/>
</kw>
<kw name="Dictionary Should Contain Value" owner="Collections">
<msg time="2024-10-01T15:00:41.230928" level="FAIL">Dictionary does not contain value 'sunt aut facere repellat provident'.</msg>
<arg>${resp_json.json()}</arg>
<arg>sunt aut facere repellat provident</arg>
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2024-10-01T15:00:41.229964" elapsed="0.000964">Dictionary does not contain value 'sunt aut facere repellat provident'.</status>
</kw>
<status status="FAIL" start="2024-10-01T15:00:40.419088" elapsed="0.811840">Dictionary does not contain value 'sunt aut facere repellat provident'.</status>
</test>
<test id="s1-t2" name="Post Request Test" line="18">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-10-01T15:00:41.234177" level="INFO">&amp;{data} = { title=Robotframework requests | body=This is a test! | userId=1 }</msg>
<var>&amp;{data}</var>
<arg>title=Robotframework requests</arg>
<arg>body=This is a test!</arg>
<arg>userId=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-10-01T15:00:41.234177" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-10-01T15:00:42.024284" level="INFO">POST Request : url=https://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '78', 'Content-Type': 'application/json'} 
 body=b'{"title": "Robotframework requests", "body": "This is a test!", "userId": "1"}' 
 </msg>
<msg time="2024-10-01T15:00:42.024284" level="INFO">POST Response : url=https://jsonplaceholder.typicode.com/posts 
 status=201, reason=Created 
 headers={'Date': 'Tue, 01 Oct 2024 08:00:36 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1727769636&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=mJF7oaASW7%2BkHpw%2FzuGC8eBuS2V4AF1%2BymPOJJGAOK8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1727769636&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=mJF7oaASW7%2BkHpw%2FzuGC8eBuS2V4AF1%2BymPOJJGAOK8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1727769676', 'Vary': 'Origin, X-HTTP-Method-Override, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'Access-Control-Expose-Headers': 'Location', 'Location': 'https://jsonplaceholder.typicode.com/posts/101', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"63-daIIVFzR7RBBdtxHXrQgXNh6uvc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8cbaeb800aaca3da-SIN', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={
  "title": "Robotframework requests",
  "body": "This is a test!",
  "userId": "1",
  "id": 101
} 
 </msg>
<msg time="2024-10-01T15:00:42.025285" level="INFO">C:\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-10-01T15:00:42.025285" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>json=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-10-01T15:00:41.235175" elapsed="0.790110"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>201</arg>
<arg>${resp}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-10-01T15:00:42.026284" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${resp.json()}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2024-10-01T15:00:42.026284" elapsed="0.001036"/>
</kw>
<status status="PASS" start="2024-10-01T15:00:41.232171" elapsed="0.795474"/>
</test>
<status status="FAIL" start="2024-10-01T15:00:39.563576" elapsed="2.464663"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="1" skip="0" id="s1" name="Req api advance">Req api advance</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
